import { ExternalLink, Globe, Bot, Smartphone, Zap, Star, MessageSquare, Brain } from "lucide-react";

export const projectsData = {
  "flexiyo": {
    id: "flexiyo",
    title: "Flexiyo - Social Media Platform",
    description: "Full-fledged social media platform combining posts, clips, chat, and free music streaming with microservices architecture using gRPC.",
    fullDescription: "Flexiyo represents the next generation of social media platforms, seamlessly integrating posts, clips, real-time chat, and free music streaming into one cohesive experience. Built from the ground up with a microservices architecture using gRPC, this platform is designed to scale efficiently while maintaining optimal performance across all features.",
    tech: ["React", "Node.js", "gRPC", "PostgreSQL", "Cassandra", "Redis", "Firebase"],
    period: "Feb 2024 - Jan 2025",
    status: "Live",
    type: "Full-Stack Application",
    gradient: "from-blue-500 to-purple-600",
    liveUrl: "https://flexiyo.pages.dev",
    githubUrl: "https://github.com/flexiyo",
    highlights: [
      "Microservices architecture with gRPC communication",
      "Custom authentication with device-based session tracking",
      "Redis caching and background task queues",
      "Real-time chat and infinite scrolling feeds",
      "Integrated music streaming capabilities",
      "Scalable deployment on Railway and Vercel",
    ],
    challenges: [
      "Implementing microservices architecture with gRPC for optimal inter-service communication",
      "Building a scalable real-time chat system that handles thousands of concurrent users",
      "Integrating music streaming while maintaining platform performance",
      "Creating a custom authentication system with device-based session tracking",
    ],
    solutions: [
      "Designed and implemented a robust microservices architecture using gRPC for low-latency communication",
      "Utilized Redis for caching and background task queues to optimize database performance",
      "Implemented infinite scrolling with efficient data pagination for smooth user experience",
      "Deployed across Railway and Vercel with PostgreSQL, Cassandra, and Firebase integration",
    ],
    features: [
      "Real-time social media posts and interactions",
      "Video clips sharing and streaming",
      "Integrated chat system with real-time messaging",
      "Free music streaming with playlist management",
      "Custom user authentication and session management",
      "Infinite scrolling feeds with optimized loading",
    ],
    metrics: {
      users: "2,500+",
      uptime: "99.9%",
      performance: "< 200ms",
      scalability: "Microservices",
    },
    links: {
      github: "https://github.com/flexiyo",
      live: "https://flexiyo.pages.dev",
    },
  },
  "upvachi": {
    id: "upvachi",
    title: "UpVachi - AI Chat Automation",
    description: "AI-powered chatbot platform that communicates on users' behalf across social platforms with sentiment-aware responses.",
    fullDescription: "UpVachi transforms how individuals and businesses manage their online presence by providing intelligent, context-aware automation for social media interactions. Using advanced NLP and sentiment analysis, the platform generates human-like responses that maintain authentic engagement while saving valuable time.",
    tech: ["React", "React Native", "Node.js", "NestJS", "PostgreSQL", "Hugging Face", "NLP"],
    period: "Jun 2025 - Present",
    status: "Live",
    type: "AI/ML Application",
    gradient: "from-green-500 to-teal-600",
    liveUrl: "https://upvachi-live.web.app",
    githubUrl: "https://github.com/upvachi",
    highlights: [
      "Real-time auto-replies with advanced NLP",
      "Sentiment-aware contextual responses",
      "Cross-platform mobile and web applications",
      "Analytics dashboard with engagement metrics",
      "Third-party integrations (Google Sheets, etc.)",
      "Customizable personality and tone settings",
    ],
    challenges: [
      "Developing accurate sentiment analysis for contextually appropriate responses",
      "Creating a system that generates human-like responses without losing authenticity",
      "Building cross-platform applications for both mobile and web",
      "Integrating with multiple social media platforms and their APIs",
    ],
    solutions: [
      "Implemented advanced NLP using Hugging Face models for sentiment-aware responses",
      "Built a sophisticated tone and personality customization system",
      "Developed both React and React Native applications for seamless cross-platform experience",
      "Created a robust analytics dashboard with engagement metrics and performance tracking",
    ],
    features: [
      "Real-time auto-replies with advanced NLP processing",
      "Sentiment analysis for contextually appropriate responses",
      "Customizable personality and tone settings",
      "Cross-platform mobile and web applications",
      "Comprehensive analytics dashboard",
      "Third-party integrations (Google Sheets, etc.)",
    ],
    metrics: {
      accuracy: "96%",
      response: "< 1.5s",
      platforms: "8+",
      engagement: "+45%",
    },
    links: {
      github: "https://github.com/upvachi",
      live: "https://upvachi-live.web.app",
    },
  },
  "nymiso": {
    id: "nymiso",
    title: "Nymiso - Print-On-Demand",
    description: "E-commerce platform with custom design studio, real-time order tracking, and premium print quality for wearables and accessories.",
    fullDescription: "Nymiso is a cutting-edge print-on-demand e-commerce platform that revolutionizes custom product creation. The platform features a real-time design studio, comprehensive product catalog, cart system, and advanced order tracking, offering customers both custom designs and premium pre-made templates.",
    tech: ["React", "Node.js", "PostgreSQL", "Custom Design Studio", "Payment Gateway", "Express", "Stripe", "Canvas API", "Real-time WebSocket"],
    period: "Jul 2025 - Present",
    status: "Live",
    type: "E-commerce Platform",
    gradient: "from-purple-500 to-pink-600",
    liveUrl: "https://dev.nymiso.com",
    githubUrl: "#",
    highlights: [
      "Custom design studio with templates",
      "Real-time order tracking system",
      "Product news feed and cart system",
      "User profiles with perks and rewards",
      "Premium fabric and print quality",
      "Unique custom design + pre-made templates",
    ],
    challenges: [
      "Building a real-time custom design studio with advanced editing capabilities",
      "Implementing seamless product customization with live preview",
      "Creating efficient order tracking and fulfillment system",
      "Integrating multiple payment gateways and inventory management",
    ],
    solutions: [
      "Developed a sophisticated Canvas-based design studio with real-time collaboration",
      "Built a comprehensive product management system with variant handling",
      "Implemented WebSocket-based real-time order tracking and notifications",
      "Created a scalable architecture to handle high-volume custom product orders",
    ],
    features: [
      "Custom design studio with advanced editing tools",
      "Product news feed and catalog management",
      "Shopping cart with real-time price calculations",
      "Real-time order tracking and notifications",
      "User profiles with order history and preferences",
      "Perks and rewards system for customer retention",
    ],
    metrics: {
      products: "500+",
      orders: "1,200+",
      uptime: "99.9%",
      satisfaction: "4.9/5",
    },
    links: {
      github: "#",
      live: "https://dev.nymiso.com",
    },
  },
  "royal-food-plaza": {
    id: "royal-food-plaza",
    title: "Royal Food Plaza - Food Delivery",
    description: "Complete food delivery system with user and admin interfaces, supporting payments, real-time notifications, and offline sync.",
    fullDescription: "Royal Food Plaza is a full-featured food delivery system that empowers local restaurants and small businesses to compete in the digital marketplace. The platform includes separate interfaces for customers and administrators, supporting everything from menu management to real-time order tracking.",
    tech: ["React", "Node.js", "Express", "PostgreSQL", "Razorpay", "Firebase"],
    period: "Mar 2025 - Apr 2025",
    status: "Live",
    type: "E-commerce Platform",
    gradient: "from-orange-500 to-red-600",
    liveUrl: "https://royalfoodplaza.vercel.app",
    githubUrl: "#",
    highlights: [
      "Integrated Razorpay and COD payment systems",
      "Admin dashboard with comprehensive analytics",
      "Offline order synchronization capability",
      "Firebase Cloud Messaging for notifications",
      "Category-wise menu management",
      "Real-time order tracking system",
    ],
    challenges: [
      "Integrating multiple payment methods including Razorpay and Cash on Delivery",
      "Building a comprehensive admin dashboard for restaurant management",
      "Implementing offline order synchronization for unreliable network conditions",
      "Creating real-time notifications for order updates",
    ],
    solutions: [
      "Successfully integrated Razorpay payment gateway with fallback COD options",
      "Developed a feature-rich admin dashboard with analytics and order management",
      "Implemented Firebase Cloud Messaging for reliable real-time notifications",
      "Built offline sync capabilities to ensure order reliability even with network issues",
    ],
    features: [
      "Category-wise menu management system",
      "Shopping cart with real-time price calculations",
      "Integrated payment processing (Razorpay + COD)",
      "Admin dashboard with comprehensive analytics",
      "Real-time order tracking and notifications",
      "Offline order synchronization capability",
    ],
    metrics: {
      orders: "800+",
      uptime: "99.8%",
      restaurants: "15+",
      satisfaction: "4.8/5",
    },
    links: {
      github: "https://github.com/kaushalkrishnax/rfp-frontend",
      live: "https://royalfoodplaza.vercel.app",
    },
  },
  "interviewer-ai": {
    id: "interviewer-ai",
    title: "Interviewer AI - Smart Interview Platform",
    description: "AI-powered interview platform that conducts realistic technical and behavioral interviews with real-time feedback and analysis.",
    fullDescription: "Interviewer AI revolutionizes interview preparation by leveraging the Gemini API to provide comprehensive analysis of practice interview responses. The platform evaluates clarity, relevance, and depth while identifying areas for improvement, making it an essential tool for job seekers.",
    tech: ["React", "Node.js", "OpenAI", "Speech Recognition", "WebRTC", "PostgreSQL", "Tailwind CSS", "Gemini API", "PDF Generation", "Local Storage", "JavaScript"],
    period: "Aug 2025 - Sep 2025",
    status: "Live",
    type: "AI/ML Application",
    gradient: "from-indigo-500 to-blue-600",
    liveUrl: "https://interviewer-ai-here.vercel.app",
    githubUrl: "https://github.com/kaushalkrishnax/interviewer-ai",
    highlights: [
      "Real-time AI-powered interview conversations",
      "Technical and behavioral question generation",
      "Speech-to-text and text-to-speech integration",
      "Comprehensive performance analytics",
      "Customizable interview difficulty levels",
      "Detailed feedback and improvement suggestions",
    ],
    challenges: [
      "Integrating Gemini API for accurate response analysis and feedback generation",
      "Building a comprehensive rating system for interview answer evaluation",
      "Implementing PDF export functionality for detailed performance reports",
      "Creating an intuitive UI that guides users through the interview process",
    ],
    solutions: [
      "Successfully integrated Gemini API with robust error handling and response validation",
      "Developed a sophisticated scoring algorithm that evaluates multiple aspects of responses",
      "Built a comprehensive PDF generation system with detailed analytics and suggestions",
      "Designed a clean, responsive interface that makes interview practice engaging and effective",
    ],
    features: [
      "AI-powered question analysis with 1-5 rating system",
      "Repetitive word detection and frequency analysis",
      "Personalized improvement suggestions and recommendations",
      "Comprehensive performance summary and analytics",
      "PDF export for detailed interview reports",
      "Local storage for caching results and preventing redundant API calls",
    ],
    metrics: {
      accuracy: "95%",
      users: "300+",
      reports: "1,500+",
      satisfaction: "4.8/5",
    },
    links: {
      github: "https://github.com/kaushalkrishnax/interviewer-ai",
      live: "https://interviewer-ai-here.vercel.app",
    },
  },
  "ctr-ai": {
    id: "ctr-ai",
    title: "CTR.ai - Click-Through Rate Optimizer",
    description: "AI-driven platform for optimizing click-through rates using machine learning algorithms and A/B testing frameworks.",
    fullDescription: "CTR.ai helps content creators and businesses craft compelling social media content that grabs attention and boosts engagement. The platform supports multiple social media platforms and provides comprehensive analytics to track content performance.",
    tech: ["React", "Python", "TensorFlow", "Node.js", "MongoDB", "Analytics API", "AI/ML", "Analytics Dashboard", "Multi-platform API"],
    period: "Sep 2025 - Present",
    status: "Live",
    type: "AI/ML Application",
    gradient: "from-cyan-500 to-blue-600",
    liveUrl: "https://ctr-ai.vercel.app",
    githubUrl: "https://github.com/kaushalkrishnax/ctr-ai",
    highlights: [
      "Machine learning-powered CTR prediction",
      "Real-time A/B testing framework",
      "Advanced analytics and reporting dashboard",
      "Automated campaign optimization",
      "Integration with major ad platforms",
      "Performance tracking and insights",
    ],
    challenges: [
      "Creating AI models that understand different platform requirements",
      "Building a comprehensive analytics dashboard for performance tracking",
      "Implementing multi-platform content optimization",
      "Developing trend analysis and content suggestion algorithms",
    ],
    solutions: [
      "Developed platform-specific AI models for optimized content generation",
      "Built a real-time analytics system with engagement tracking",
      "Created adaptive content formatting for different social media platforms",
      "Implemented machine learning algorithms for trend prediction and content optimization",
    ],
    features: [
      "AI-powered content generation for multiple platforms",
      "Real-time performance tracking and analytics",
      "Hashtag optimization and trend analysis",
      "Content scheduling and automation",
      "A/B testing for content optimization",
      "Multi-platform publishing capabilities",
    ],
    metrics: {
      platforms: "6+",
      content: "10K+",
      engagement: "+65%",
      users: "500+",
    },
    links: {
      github: "https://github.com/kaushalkrishnax/ctr-ai",
      live: "https://ctr-ai.vercel.app",
    },
  },
  "youtube-summarizer": {
    id: "youtube-summarizer",
    title: "YouTube Video Summarizer Extension",
    description: "Chrome extension that analyzes YouTube content and provides concise summaries using NLP algorithms.",
    fullDescription: "The YouTube Video Summarizer is a powerful Chrome extension that helps users save time by providing concise, accurate summaries of YouTube videos. Using advanced natural language processing, it analyzes video transcripts and extracts key points, making it easier to grasp essential information quickly.",
    tech: ["JavaScript", "HTML", "CSS", "YouTube API", "NLP"],
    period: "Jun 2025 - Jul 2025",
    status: "Published",
    type: "Browser Extension",
    gradient: "from-red-500 to-pink-600",
    liveUrl: "#",
    githubUrl: "https://github.com/kaushalkrishnax/yt-summarizer",
    highlights: [
      "Real-time transcript analysis and processing",
      "Customizable summary length and detail level",
      "Seamless YouTube interface integration",
      "Optimized background scripting for performance",
      "Support for videos of various lengths",
      "Clean, intuitive user interface",
    ],
    challenges: [
      "Processing and analyzing video transcripts in real-time",
      "Creating a clean integration with YouTube's existing interface",
      "Optimizing performance to avoid impacting browser speed",
      "Handling videos of varying lengths and content types",
    ],
    solutions: [
      "Implemented efficient NLP algorithms for real-time transcript analysis",
      "Designed a seamless UI that integrates naturally with YouTube's interface",
      "Optimized background scripting to minimize performance impact",
      "Created customizable summary options for different user preferences",
    ],
    features: [
      "Real-time video transcript analysis",
      "Customizable summary length and detail level",
      "Seamless YouTube interface integration",
      "Support for videos of various lengths",
      "Clean, intuitive user interface",
      "Optimized performance with background processing",
    ],
    metrics: {
      installs: "500+",
      rating: "4.9/5",
      performance: "Fast",
      accuracy: "94%",
    },
    links: {
      github: "https://github.com/kaushalkrishnax/yt-summarizer",
      live: "#",
    },
  },
  "whatsapp-bot": {
    id: "whatsapp-bot",
    title: "WhatsApp Bot - Automated Messaging",
    description: "Local WhatsApp automation bot that intercepts messages and replies on behalf of users using Baileys package with MongoDB chat storage.",
    fullDescription: "A sophisticated WhatsApp automation bot that runs locally, intercepts incoming messages, and provides intelligent responses on behalf of the user. The system uses the @whiskeysockets/baileys package for WhatsApp Web integration and stores all chat data in MongoDB for analysis and learning.",
    tech: ["Node.js", "@whiskeysockets/baileys", "MongoDB", "QR Code", "WebSocket", "Natural Language Processing"],
    period: "Oct 2025 - Present",
    status: "Completed",
    type: "Automation Tool",
    gradient: "from-green-500 to-emerald-600",
    liveUrl: "#",
    githubUrl: "https://github.com/kaushalkrishnax/whatsapp-bot",
    highlights: [
      "Automated message interception and replies",
      "MongoDB integration for chat storage",
      "QR code authentication system",
      "Custom response logic and rules",
      "Real-time message processing",
      "Local machine deployment ready",
    ],
    challenges: [
      "Integrating with WhatsApp Web API using Baileys package",
      "Implementing intelligent message filtering and response logic",
      "Building a robust chat storage system with MongoDB",
      "Creating natural language processing for context-aware responses",
    ],
    solutions: [
      "Successfully integrated Baileys package with proper session management",
      "Developed smart filtering algorithms to identify messages requiring responses",
      "Built a comprehensive MongoDB schema for chat history and user preferences",
      "Implemented NLP algorithms for generating contextually appropriate responses",
    ],
    features: [
      "Automatic message interception and analysis",
      "Intelligent response generation based on context",
      "Complete chat history storage in MongoDB",
      "User preference learning and adaptation",
      "Custom response templates and rules",
      "Real-time message processing and logging",
    ],
    metrics: {
      messages: "5K+",
      accuracy: "92%",
      response: "< 2s",
      uptime: "99.5%",
    },
    links: {
      github: "https://github.com/kaushalkrishnax/whatsapp-bot",
      live: "#",
    },
  },
};

export type Project = typeof projectsData[keyof typeof projectsData];